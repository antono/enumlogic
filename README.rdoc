= enumlogic

Allows you to easily specify enumerations for your models. Specify enumerations like:

    create_table :computers do |t|
      t.integer :kind
    end

    class Computer < ActiveRecord::Base
      enum :kind, ["apple", "dell", "hp"]
    end

    class Computer < ActiveRecord::Base
      enum :kind, {"apple" => "Apple", "dell" => "Dell", "hp" => "HP"}
    end

    class Computer < ActiveRecord::Base
      enum :kind, {"apple" => "Apple", "dell" => "Dell", "hp" => "HP"}, :denominator => 1_000_000
    end

All enums are translated to numbers with Zlib.crc(31). This numbers are big and if you want smaller
numbers you can pass :denominator option. Default denominator is 100_000.

You can now do the following:

    Computer::KINDS         # passes back the defined enum keys as array. Constant name can be specified with
                            # :constant option
    Computer.kind_options   # gives you a friendly hash that you can easily pass into the select helper for forms
    Computer.new(:kind => "unknown").valid? # false, automatically validates inclusion of the enum field

    c = Computer.new(:kind => "apple")
    c.apple?        # true
    c.kind_key      # :apple
    c.kind_int      # Zlib.crc32(:apple.to_s) / denominator
    c.kind_text     # "apple" or "Apple" if you gave a hash with a user friendly text value
    c.enum?(:kind)  # true

== Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2009 binarylogic.
Copyright (c) 2009 Antono Vasiljev.
See LICENSE for details.
